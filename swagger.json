{
  "openapi": "3.0.1",
  "info": {
    "title": "Red-Boar-Inn Server API",
    "description": "",
    "version": "1.0.0",
    "contact": { "name": "support", "email": "red-boar-inn-support@gmail.com" }
  },
  "basePath": "/",
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "description": "Authentication with bearer token ",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "BadRequest": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "NotFound": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "Unauthorized": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "RequestCreatedCharacter": {
        "type": "object",
        "properties": {
          "charName": {
            "type": "string",
            "required": true,
            "example": "ExampleName"
          },
          "className": {
            "type": "string",
            "required": true,
            "example": "Warrior"
          }
        }
      },
      "RequestUpdateCharacter": {
        "type": "object",
        "properties": {
          "level": { "type": "number", "example": "2" },
          "charName": { "type": "string", "example": "ExampleName" },
          "className": { "type": "string", "example": "Warrior" },
          "gender": { "type": "string", "example": "man | woman" }
        }
      },
      "ParameterID": {
        "description": "Character ID",
        "name": "id",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ParameterName": {
        "description": "Character Name",
        "name": "name",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ResponseGetAllCharacters": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "pubId": { "type": "string", "format": "uuid" },
            "level": { "type": "number", "example": "1" },
            "charName": { "type": "string", "example": "ExampleName" },
            "className": { "type": "string", "example": "Warrior" },
            "gender": { "type": "string", "example": "man | woman" }
          }
        }
      },
      "ResponseGetByIdOrNameCharacter": {
        "type": "object",
        "properties": {
          "pubId": { "type": "string", "format": "uuid" },
          "level": { "type": "number", "example": "1" },
          "charName": { "type": "string", "example": "ExampleName" },
          "className": { "type": "string", "example": "Warrior" },
          "gender": { "type": "string", "example": "man | woman" }
        }
      },
      "RequestUpdateStatus": {
        "type": "object",
        "properties": {
          "points": { "type": "number", "example": "15" },
          "experience": { "type": "number", "example": "5" },
          "strength": { "type": "number", "example": "1" },
          "intelligence": { "type": "number", "example": "1" },
          "dexterity": { "type": "number", "example": "1" },
          "vitality": { "type": "number", "example": "1" },
          "health": { "type": "number", "example": "1" },
          "energy": { "type": "number", "example": "1" },
          "currentHealth": { "type": "number", "example": "1" },
          "currentEnergy": { "type": "number", "example": "1" }
        }
      },
      "ParameterStatusID": {
        "description": "Status ID",
        "name": "id",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ResponseGetByIdStatus": {
        "type": "object",
        "properties": {
          "pubId": { "type": "string", "format": "uuid" },
          "points": { "type": "number", "example": "15" },
          "experience": { "type": "number", "example": "5" },
          "strength": { "type": "number", "example": "1" },
          "intelligence": { "type": "number", "example": "1" },
          "dexterity": { "type": "number", "example": "1" },
          "vitality": { "type": "number", "example": "1" },
          "health": { "type": "number", "example": "1" },
          "energy": { "type": "number", "example": "1" },
          "currentHealth": { "type": "number", "example": "1" },
          "currentEnergy": { "type": "number", "example": "1" }
        }
      },
      "RequestUpdateEquipment": {
        "type": "object",
        "properties": {
          "head": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "body": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "leg": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "handLeft": {
            "type": "object",
            "example": "{name: '...', attack: 2, magic: 2, value: 1, description: '..'}"
          },
          "handRight": {
            "type": "object",
            "example": "{name: '...', attack: 2, magic: 2, value: 1, description: '..'}"
          },
          "accessoryLeft": {
            "type": "object",
            "example": "{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}"
          },
          "accessoryRight": {
            "type": "object",
            "example": "{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}"
          }
        }
      },
      "ParameterEquipmentID": {
        "description": "Equipment ID",
        "name": "id",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ResponseGetByIdEquipment": {
        "type": "object",
        "properties": {
          "pubId": { "type": "string", "format": "uuid" },
          "head": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "body": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "leg": {
            "type": "object",
            "example": "{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "handLeft": {
            "type": "object",
            "example": "{name: '...', attack: 2, magic: 2, value: 1, description: '..'}"
          },
          "handRight": {
            "type": "object",
            "example": "{name: '...', attack: 2, magic: 2, value: 1, description: '..'}"
          },
          "accessoryLeft": {
            "type": "object",
            "example": "{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}"
          },
          "accessoryRight": {
            "type": "object",
            "example": "{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}"
          }
        }
      },
      "RequestUpdateInventory": {
        "type": "object",
        "properties": {
          "armors": {
            "type": "array",
            "example": "[{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "accessories": {
            "type": "array",
            "example": "[{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}]"
          },
          "consumables": {
            "type": "array",
            "example": "[{name: '...', type: 'food', restore: 'health', total: 2, value: 1, description: '...'}]"
          },
          "materials": {
            "type": "array",
            "example": "[{name: '...', type: 'craft', total: 2, value: 1, description: '...'}]"
          },
          "weapons": {
            "type": "array",
            "example": "[{name: '...', attack: 2, magic: 2, value: 1, description: '..'}]"
          }
        }
      },
      "ParameterInventoryID": {
        "description": "Inventory ID",
        "name": "id",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ResponseGetByIdInventory": {
        "type": "object",
        "properties": {
          "pubId": { "type": "string", "format": "uuid" },
          "armors": {
            "type": "array",
            "example": "[{name: '...', defense: 2, resistance: 2, value: 1, description: '..'}"
          },
          "accessories": {
            "type": "array",
            "example": "[{name: '...', type: 'ring', value: 1, health: 2, energy: 2, description: '..'}]"
          },
          "consumables": {
            "type": "array",
            "example": "[{name: '...', type: 'food', restore: 'health', total: 2, value: 1, description: '...'}]"
          },
          "materials": {
            "type": "array",
            "example": "[{name: '...', type: 'craft', total: 2, value: 1, description: '...'}]"
          },
          "weapons": {
            "type": "array",
            "example": "[{name: '...', attack: 2, magic: 2, value: 1, description: '..'}]"
          }
        }
      },
      "RequestUpdateSkills": {
        "type": "object",
        "properties": {
          "offensive": {
            "type": "array",
            "example": "[{name: 'slash', type: 'melee', attack: 4, magic: 0, description: '...'}]"
          },
          "defensive": {
            "type": "array",
            "example": "[{name: 'fortitude', type: 'upgrade', defense: 4, resistance: 4, description: '...'}]"
          }
        }
      },
      "ParameterSkillsID": {
        "description": "Skills ID",
        "name": "id",
        "in": "path",
        "type": "string",
        "required": true
      },
      "ResponseGetByIdSkills": {
        "type": "object",
        "properties": {
          "pubId": { "type": "string", "format": "uuid" },
          "offensive": {
            "type": "array",
            "example": "[{name: 'slash', type: 'melee', attack: 4, magic: 0, description: '...'}]"
          },
          "defensive": {
            "type": "array",
            "example": "[{name: 'fortitude', type: 'upgrade', defense: 4, resistance: 4, description: '...'}]"
          }
        }
      }
    }
  },
  "paths": {
    "/characters": {
      "post": {
        "tags": ["character"],
        "summary": "Register new character",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreatedCharacter"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "201": { "description": "Successful Response" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["character"],
        "summary": "Get all characters",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetAllCharacters"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["character"],
        "summary": "Update character",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateCharacter"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["character"],
        "summary": "Delete the character",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/characters/{id}": {
      "get": {
        "tags": ["character"],
        "summary": "Find a character by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterID" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdOrNameCharacter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/characters/name/{name}": {
      "get": {
        "tags": ["character"],
        "summary": "Find a character by name",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterName" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdOrNameCharacter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/status": {
      "post": {
        "tags": ["status"],
        "summary": "Register new status",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {},
        "parameters": [],
        "responses": {
          "201": { "description": "Successful Response" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["status"],
        "summary": "Update status",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RequestUpdateStatus" }
            }
          }
        },
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["status"],
        "summary": "Delete the status",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/status/{id}": {
      "get": {
        "tags": ["status"],
        "summary": "Find a status by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterStatusID" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/equipments": {
      "post": {
        "tags": ["equipment"],
        "summary": "Register new equipment",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {},
        "parameters": [],
        "responses": {
          "201": { "description": "Successful Response" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["equipment"],
        "summary": "Update equipment",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateEquipment"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["equipment"],
        "summary": "Delete the equipment",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/equipments/{id}": {
      "get": {
        "tags": ["equipment"],
        "summary": "Find a equipment by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterEquipmentID" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdEquipment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/inventories": {
      "post": {
        "tags": ["inventory"],
        "summary": "Register new inventory",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {},
        "parameters": [],
        "responses": {
          "201": { "description": "Successful Response" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["inventory"],
        "summary": "Update inventory",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateInventory"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["inventory"],
        "summary": "Delete the inventory",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/inventories/{id}": {
      "get": {
        "tags": ["inventory"],
        "summary": "Find a inventory by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterInventoryID" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdInventory"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/skills": {
      "post": {
        "tags": ["skills"],
        "summary": "Register new skills",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {},
        "parameters": [],
        "responses": {
          "201": { "description": "Successful Response" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["skills"],
        "summary": "Update skills",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RequestUpdateSkills" }
            }
          }
        },
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["skills"],
        "summary": "Delete the skills",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [],
        "responses": {
          "204": { "description": "No content" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    },
    "/skills/{id}": {
      "get": {
        "tags": ["skills"],
        "summary": "Find a skills by id",
        "security": [{ "bearerAuth": [] }],
        "description": "",
        "parameters": [{ "$ref": "#/components/schemas/ParameterSkillsID" }],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseGetByIdSkills"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BadRequest" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Unauthorized" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NotFound" }
              }
            }
          }
        }
      }
    }
  }
}
